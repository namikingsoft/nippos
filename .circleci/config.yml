version: 2

references:

  - &docker_container
    docker:
      - image: docker
    working_directory: ~/project

  - &build_image
    run:
      name: Build docker image
      command: |
        docker build -t nippos .

  - &output_image_cache
    run:
      name: Output docker images cache
      command: |
        mkdir -p ~/caches
        docker save $(docker images -q) -o ~/caches/images.tar

  - &input_image_cache
    run:
      name: Input docker images cache
      command: |
        set +o pipefail
        docker load -i ~/caches/images.tar | true

  - &save_image_cache
    save_cache:
      key: docker-{{ checksum ".dockerignore" }}-{{ checksum "Dockerfile" }}
      paths: ~/caches/images.tar

  - &restore_image_cache
     restore_cache:
      key: docker-{{ checksum ".dockerignore" }}-{{ checksum "Dockerfile" }}
      paths: ~/caches/images.tar

jobs:

  build_docker:
    <<: *docker_container
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - *restore_image_cache
      - *input_image_cache
      - *build_image
      - *output_image_cache
      - *save_image_cache

  test:
    <<: *docker_container
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - *restore_image_cache
      - *input_image_cache
      - *build_image
      - run:
          name: Build application Docker image
          command: |
            docker run \
              -e TZ \
              -e PARAGRAPH_JSON \
              -e SLACK_TOKEN \
              -e SLACK_DOMAIN \
              -e SLACK_USER_ID \
              -e SLACK_CHANNEL_ID \
              -e SLACK_CHANNEL_TYPE \
              -e SLACK_CHANNEL_TYPE \
              -e QIITA_TOKEN \
              -e QIITA_DOMAIN \
              -e QIITA_TITLE \
              -e QIITA_TAGS \
              -it nippos sh -c 'hh2md | postm' > /dev/null

workflows:
  version: 2

  commit:
    jobs:
      - build_docker
      - test:
          requires:
            - build_docker
